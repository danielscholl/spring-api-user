# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  - group: deploy-group
  
stages:
- stage: Infrastructure
  displayName: Deploy Infrastructure
  jobs:
  - job: Provision
    displayName: Provision
    pool:
      vmImage: $(vmImageName)
    steps:
      - task: AzureResourceManagerTemplateDeployment@3
        inputs:
          deploymentScope: 'Resource Group'
          ConnectedServiceName: 'dascholl-CAT(2e458de2-af10-484c-a5a5-6c259d9a907f)'
          subscriptionName: '$(SUBSCRIPTION)'
          action: 'Create Or Update Resource Group'
          resourceGroupName: '$(SPRING_USER_API_GROUP)'
          location: 'Central US'
          templateLocation: 'Linked artifact'
          csmFileLink: '$(artifactsLocation)WebSite.json$(artifactsLocationSasToken)'
          csmFile: './iac/azuredeploy.json'
          csmParametersFile: './iac/azuredeploy.parameters.json'
          overrideParameters: '-random $(RANDOM) -_artifactsLocationSasToken "$(artifactsLocationSasToken)"'
          deploymentMode: 'Incremental'
          deploymentName: 'pipeline'
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    variables:
      registryServiceEndpoint: 'AZURE_REGISTRY'
      imageRepository: 'spring-api-user'
      vmImageName: 'ubuntu-latest'
      dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
      tag: '$(Build.BuildId)'
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(registryServiceEndpoint)
        tags: |
          $(tag)